# import HTTP remote provider

import json
import pandas as pd

configfile: "workflow/config/config.yaml"

# path configuration
rawdata = Path(config["rawdataDir"])
metadata = Path(config["metadataDir"])
procdata = Path(config["procdataDir"])
results = Path(config["resultsDir"])
scripts = Path(config["scriptsDir"])


include: "rules/downloadData.smk"
include: "/home/bioinf/bhklab/jermiah/psets/PharmacoSet-Pipelines/workflow/rules/downloadGencode.smk"
# include: "rules/downloadGencode.smk"

rule build_PharmacoSet:
    input:
        results / "processedExpressionGenesSE.qs",
        results / "processedExpressionTranscriptsSE.qs",
        results / "processedExpressionCNVSE.qs",
        rawdata / "mutation/CCLE_Oncomap3_Assays_2012-04-09.csv",
        rawdata / "mutation/CCLE_Oncomap3_2012-04-09.maf",
        rawdata / "methylation/CCLE_RRBS_TSS1kb_20181022.txt.gz",



rule make_ExpressionCNV_SE:
    input:
        procdata / "preprocessedCNV.qs",
    output:
        results / "processedExpressionCNVSE.qs"
    

rule preprocessCNV:
    input:
        cnv=rawdata / "cnv/CCLE_copynumber_byGene_2013-12-03.txt.gz",
        ccle_gencode=gencodeAnnotation(
            dirPath=metadata,
            ref_build=config["gencode_reference"],
            gencode_ver=config["ccle_gencode_ver"],
            species="human"),
    output:
        preprocessedCNV = procdata / "preprocessedCNV.qs"
    threads:
        4
    script:
        scripts / "preprocessCNV.R"


rule make_ExpressionGenes_SE:
    input:
        preprocessedExpression = procdata / "preprocessedExpressionGenes.qs",
    output:
        processedExpressionGenesSE = results / "processedExpressionGenesSE.qs"
    threads:
        4
    script:
        scripts / "make_ExpressionGenes_SE.R"

rule make_ExpressionTranscripts_SE:
    input:
        preprocessedExpression = procdata / "preprocessedExpressionTranscripts.qs",
    output:
        processedExpressionTranscriptsSE = results / "processedExpressionTranscriptsSE.qs"
    threads:
        4
    script:
        scripts / "make_ExpressionTranscripts_SE.R"


rule preprocessExpressionTranscripts:
    input:
        transcripts = rawdata / "expression/CCLE_RNAseq_rsem_transcripts_tpm_20180929.txt",
        ccle_gencode=gencodeAnnotation(
            dirPath=metadata,
            ref_build=config["gencode_reference"],
            gencode_ver=config["ccle_gencode_ver"],
            species="human"),
    output:
        preprocessedExpression = procdata / "preprocessedExpressionTranscripts.qs"
    threads:
        4
    script:
        scripts / "preprocessExpressionTranscripts.R"
    

rule preprocessExpressionGenes:
    input:
        genes=rawdata / "expression/CCLE_RNAseq_rsem_genes_tpm_20180929.txt",
        ccle_gencode=gencodeAnnotation(
            dirPath=metadata,
            ref_build=config["gencode_reference"],
            gencode_ver=config["ccle_gencode_ver"],
            species="human"),
    output:
        preprocessedExpression = procdata / "preprocessedExpressionGenes.qs"
    threads:
        4
    script:
        scripts / "preprocessExpressionGenes.R"